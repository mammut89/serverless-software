{"version":3,"sources":["node_modules/react/lib/ReactNativeComponent.js"],"names":["assign","require","invariant","autoGenerateWrapperClass","genericComponentClass","tagToComponentClass","textComponentClass","ReactNativeComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","injectComponentClasses","componentClasses","getComponentClassForElement","element","type","tag","createInternalComponent","process","env","NODE_ENV","undefined","props","createInstanceForText","text","isTextComponent","component","ReactNativeComponent","injection","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA,IAAIA,SAASC,QAAQ,iBAAR,CAAb;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA,IAAIE,2BAA2B,IAA/B;AACA,IAAIC,wBAAwB,IAA5B;AACA;AACA,IAAIC,sBAAsB,EAA1B;AACA,IAAIC,qBAAqB,IAAzB;;AAEA,IAAIC,gCAAgC;AAClC;AACA;AACAC,+BAA6B,qCAAUC,cAAV,EAA0B;AACrDL,4BAAwBK,cAAxB;AACD,GALiC;AAMlC;AACA;AACAC,4BAA0B,kCAAUD,cAAV,EAA0B;AAClDH,yBAAqBG,cAArB;AACD,GAViC;AAWlC;AACA;AACAE,0BAAwB,gCAAUC,gBAAV,EAA4B;AAClDZ,WAAOK,mBAAP,EAA4BO,gBAA5B;AACD;AAfiC,CAApC;;AAkBA;;;;;;AAMA,SAASC,2BAAT,CAAqCC,OAArC,EAA8C;AAC5C,MAAI,OAAOA,QAAQC,IAAf,KAAwB,UAA5B,EAAwC;AACtC,WAAOD,QAAQC,IAAf;AACD;AACD,MAAIC,MAAMF,QAAQC,IAAlB;AACA,MAAIN,iBAAiBJ,oBAAoBW,GAApB,CAArB;AACA,MAAIP,kBAAkB,IAAtB,EAA4B;AAC1BJ,wBAAoBW,GAApB,IAA2BP,iBAAiBN,yBAAyBa,GAAzB,CAA5C;AACD;AACD,SAAOP,cAAP;AACD;;AAED;;;;;;AAMA,SAASQ,uBAAT,CAAiCH,OAAjC,EAA0C;AACxC,GAACV,qBAAD,GAAyBc,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClB,UAAU,KAAV,EAAiB,iDAAjB,EAAoEY,QAAQC,IAA5E,CAAxC,GAA4Hb,UAAU,KAAV,CAArJ,GAAwKmB,SAAxK;AACA,SAAO,IAAIjB,qBAAJ,CAA0BU,QAAQC,IAAlC,EAAwCD,QAAQQ,KAAhD,CAAP;AACD;;AAED;;;;AAIA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACnC,SAAO,IAAIlB,kBAAJ,CAAuBkB,IAAvB,CAAP;AACD;;AAED;;;;AAIA,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAClC,SAAOA,qBAAqBpB,kBAA5B;AACD;;AAED,IAAIqB,uBAAuB;AACzBd,+BAA6BA,2BADJ;AAEzBI,2BAAyBA,uBAFA;AAGzBM,yBAAuBA,qBAHE;AAIzBE,mBAAiBA,eAJQ;AAKzBG,aAAWrB;AALc,CAA3B;;AAQAsB,OAAOC,OAAP,GAAiBH,oBAAjB","file":"ReactNativeComponent.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;"]}