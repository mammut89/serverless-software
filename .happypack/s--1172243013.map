{"version":3,"sources":["node_modules/react/lib/ReactClass.js"],"names":["ReactComponent","require","ReactElement","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactNoopUpdateQueue","assign","emptyObject","invariant","keyMirror","keyOf","warning","MIXINS_KEY","mixins","SpecPolicy","DEFINE_ONCE","DEFINE_MANY","OVERRIDE_BASE","DEFINE_MANY_MERGED","injectedMixins","warnedSetProps","warnSetProps","process","env","NODE_ENV","undefined","ReactClassInterface","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","RESERVED_SPEC_KEYS","displayName","Constructor","i","length","mixSpecIntoComponent","validateTypeDef","childContext","context","createMergedResultFunction","prop","mixStaticSpecIntoComponent","autobind","typeDef","location","propName","hasOwnProperty","validateMethodOverride","proto","name","specPolicy","ReactClassMixin","spec","isValidElement","prototype","property","isReactClassMethod","isAlreadyDefined","isFunction","shouldAutoBind","__reactAutoBindMap","createChainedFunction","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","key","mergedResult","a","apply","arguments","b","c","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","newThis","_len","args","Array","_key","reboundMethod","bindAutoBindMethods","autoBindKey","replaceState","newState","callback","updater","enqueueReplaceState","enqueueCallback","isMounted","setProps","partialProps","enqueueSetProps","replaceProps","newProps","enqueueReplaceProps","ReactClassComponent","ReactClass","createClass","props","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","methodName","injection","injectMixin","mixin","push","module","exports"],"mappings":"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","file":"ReactClass.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\nvar warnedSetProps = false;\nfunction warnSetProps() {\n  if (!warnedSetProps) {\n    warnedSetProps = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\n  }\n}\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = (name in RESERVED_SPEC_KEYS);\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\n\n    var isInherited = (name in Constructor);\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function (partialProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueSetProps(this, partialProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function (newProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function () {};\nassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;"]}