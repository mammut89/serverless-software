{"version":3,"sources":["node_modules/react/lib/ReactChildReconciler.js"],"names":["ReactReconciler","require","instantiateReactComponent","shouldUpdateReactComponent","traverseAllChildren","warning","instantiateChild","childInstances","child","name","keyUnique","undefined","process","env","NODE_ENV","ReactChildReconciler","instantiateChildren","nestedChildNodes","transaction","context","updateChildren","prevChildren","nextChildren","hasOwnProperty","prevChild","prevElement","_currentElement","nextElement","receiveComponent","unmountComponent","nextChildInstance","unmountChildren","renderedChildren","renderedChild","module","exports"],"mappings":"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","file":"ReactChildReconciler.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nfunction instantiateChild(childInstances, child, name) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, null);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, transaction, context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, null);\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;"]}