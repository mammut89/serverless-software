{"version":3,"sources":["node_modules/history/lib/DOMUtils.js"],"names":["exports","__esModule","addEventListener","removeEventListener","getHashPath","replaceHashPath","getWindowPath","go","getUserConfirmation","supportsHistory","supportsGoWithoutReloadUsingHash","node","event","listener","attachEvent","detachEvent","window","location","href","split","path","replace","pathname","search","hash","n","history","message","callback","confirm","ua","navigator","userAgent","indexOf"],"mappings":"AAAA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,gBAAR,GAA2BA,gBAA3B;AACAF,QAAQG,mBAAR,GAA8BA,mBAA9B;AACAH,QAAQI,WAAR,GAAsBA,WAAtB;AACAJ,QAAQK,eAAR,GAA0BA,eAA1B;AACAL,QAAQM,aAAR,GAAwBA,aAAxB;AACAN,QAAQO,EAAR,GAAaA,EAAb;AACAP,QAAQQ,mBAAR,GAA8BA,mBAA9B;AACAR,QAAQS,eAAR,GAA0BA,eAA1B;AACAT,QAAQU,gCAAR,GAA2CA,gCAA3C;;AAEA,SAASR,gBAAT,CAA0BS,IAA1B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiD;AAC/C,MAAIF,KAAKT,gBAAT,EAA2B;AACzBS,SAAKT,gBAAL,CAAsBU,KAAtB,EAA6BC,QAA7B,EAAuC,KAAvC;AACD,GAFD,MAEO;AACLF,SAAKG,WAAL,CAAiB,OAAOF,KAAxB,EAA+BC,QAA/B;AACD;AACF;;AAED,SAASV,mBAAT,CAA6BQ,IAA7B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AAClD,MAAIF,KAAKR,mBAAT,EAA8B;AAC5BQ,SAAKR,mBAAL,CAAyBS,KAAzB,EAAgCC,QAAhC,EAA0C,KAA1C;AACD,GAFD,MAEO;AACLF,SAAKI,WAAL,CAAiB,OAAOH,KAAxB,EAA+BC,QAA/B;AACD;AACF;;AAED,SAAST,WAAT,GAAuB;AACrB;AACA;AACA,SAAOY,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,KAAsC,EAA7C;AACD;;AAED,SAASd,eAAT,CAAyBe,IAAzB,EAA+B;AAC7BJ,SAAOC,QAAP,CAAgBI,OAAhB,CAAwBL,OAAOC,QAAP,CAAgBK,QAAhB,GAA2BN,OAAOC,QAAP,CAAgBM,MAA3C,GAAoD,GAApD,GAA0DH,IAAlF;AACD;;AAED,SAASd,aAAT,GAAyB;AACvB,SAAOU,OAAOC,QAAP,CAAgBK,QAAhB,GAA2BN,OAAOC,QAAP,CAAgBM,MAA3C,GAAoDP,OAAOC,QAAP,CAAgBO,IAA3E;AACD;;AAED,SAASjB,EAAT,CAAYkB,CAAZ,EAAe;AACb,MAAIA,CAAJ,EAAOT,OAAOU,OAAP,CAAenB,EAAf,CAAkBkB,CAAlB;AACR;;AAED,SAASjB,mBAAT,CAA6BmB,OAA7B,EAAsCC,QAAtC,EAAgD;AAC9CA,WAASZ,OAAOa,OAAP,CAAeF,OAAf,CAAT;AACD;;AAED;;;;;;;;AAQA,SAASlB,eAAT,GAA2B;AACzB,MAAIqB,KAAKC,UAAUC,SAAnB;AACA,MAAI,CAACF,GAAGG,OAAH,CAAW,YAAX,MAA6B,CAAC,CAA9B,IAAmCH,GAAGG,OAAH,CAAW,aAAX,MAA8B,CAAC,CAAnE,KAAyEH,GAAGG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAA1G,IAA+GH,GAAGG,OAAH,CAAW,QAAX,MAAyB,CAAC,CAAzI,IAA8IH,GAAGG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAAnL,EAAsL;AACpL,WAAO,KAAP;AACD;AACD,SAAOjB,OAAOU,OAAP,IAAkB,eAAeV,OAAOU,OAA/C;AACD;;AAED;;;;AAIA,SAAShB,gCAAT,GAA4C;AAC1C,MAAIoB,KAAKC,UAAUC,SAAnB;AACA,SAAOF,GAAGG,OAAH,CAAW,SAAX,MAA0B,CAAC,CAAlC;AACD","file":"DOMUtils.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}"]}