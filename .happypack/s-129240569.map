{"version":3,"sources":["node_modules/fbjs/lib/shallowEqual.js"],"names":["hasOwnProperty","Object","prototype","shallowEqual","objA","objB","keysA","keys","keysB","length","bHasOwnProperty","bind","i","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;;;AAEA,IAAIA,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAtC;;AAEA;;;;;AAKA,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,MAAID,SAASC,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BA,SAAS,IAArC,IAA6C,QAAOC,IAAP,yCAAOA,IAAP,OAAgB,QAA7D,IAAyEA,SAAS,IAAtF,EAA4F;AAC1F,WAAO,KAAP;AACD;;AAED,MAAIC,QAAQL,OAAOM,IAAP,CAAYH,IAAZ,CAAZ;AACA,MAAII,QAAQP,OAAOM,IAAP,CAAYF,IAAZ,CAAZ;;AAEA,MAAIC,MAAMG,MAAN,KAAiBD,MAAMC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED;AACA,MAAIC,kBAAkBV,eAAeW,IAAf,CAAoBN,IAApB,CAAtB;AACA,OAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIN,MAAMG,MAA1B,EAAkCG,GAAlC,EAAuC;AACrC,QAAI,CAACF,gBAAgBJ,MAAMM,CAAN,CAAhB,CAAD,IAA8BR,KAAKE,MAAMM,CAAN,CAAL,MAAmBP,KAAKC,MAAMM,CAAN,CAAL,CAArD,EAAqE;AACnE,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBX,YAAjB","file":"shallowEqual.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n * @typechecks\n * \n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var bHasOwnProperty = hasOwnProperty.bind(objB);\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;"]}