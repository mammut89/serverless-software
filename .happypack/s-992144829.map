{"version":3,"sources":["node_modules/react/lib/ReactDefaultPerf.js"],"names":["DOMProperty","require","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow","roundFloat","val","Math","floor","addValue","obj","key","ReactDefaultPerf","_allMeasurements","_mountStack","_injected","start","injection","injectMeasure","measure","length","enableMeasure","stop","getLastMeasurements","printExclusive","measurements","summary","getExclusiveSummary","console","table","map","item","componentName","inclusive","exclusive","render","count","printInclusive","getInclusiveSummary","time","log","getTotalTime","toFixed","getMeasurementsSummaryMap","printWasted","printDOM","getDOMSummary","result","ID_ATTRIBUTE_NAME","id","type","args","JSON","stringify","_recordWrite","fnName","totalTime","writes","push","moduleName","func","_len","arguments","Array","_key","rv","counts","displayNames","created","apply","mountID","getID","forEach","update","writeArgs","fromIndex","toIndex","textContent","markupIndex","markup","parentID","prototype","slice","call","_currentElement","TopLevelWrapper","rootNodeID","_rootNodeID","isRender","isMount","mountStack","entry","subMountTime","pop","current","getName","owner","_owner","module","exports"],"mappings":"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","file":"ReactDefaultPerf.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDefaultPerfAnalysis = require('./ReactDefaultPerfAnalysis');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\n\nvar performanceNow = require('fbjs/lib/performanceNow');\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function () {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function () {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function () {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function (item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function (item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  getMeasurementsSummaryMap: function (measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);\n    return summary.map(function (item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  printDOM: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function (item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result.type = item.type;\n      result.args = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  _recordWrite: function (id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function (moduleName, fnName, func) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0,\n          created: {}\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function (update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);\n          });\n        } else {\n          // basic format\n          var id = args[0];\n          if (typeof id === 'object') {\n            id = ReactMount.getID(args[0]);\n          }\n          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?\n      fnName === '_renderValidatedComponent')) {\n\n        if (this._currentElement.type === ReactMount.TopLevelWrapper) {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          entry.created[rootNodeID] = true;\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;"]}