{"version":3,"sources":["node_modules/react/lib/ReactDOMInput.js"],"names":["ReactDOMIDOperations","require","LinkedValueUtils","ReactMount","ReactUpdates","assign","invariant","instancesByReactID","forceUpdateIfMounted","_rootNodeID","ReactDOMInput","updateWrapper","getNativeProps","inst","props","context","value","getValue","checked","getChecked","nativeProps","defaultChecked","undefined","defaultValue","_wrapperState","initialValue","initialChecked","onChange","mountWrapper","process","env","NODE_ENV","checkPropTypes","_currentElement","_owner","_handleChange","bind","mountReadyWrapper","unmountWrapper","updatePropertyByID","event","returnValue","executeOnChange","asap","name","type","rootNode","getNode","queryRoot","parentNode","group","querySelectorAll","JSON","stringify","i","length","otherNode","form","otherID","getID","otherInstance","module","exports"],"mappings":"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","file":"ReactDOMInput.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getNativeProps: function (inst, props, context) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var nativeProps = assign({}, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  mountReadyWrapper: function (inst) {\n    // Can't be in mountWrapper or else server rendering leaks.\n    instancesByReactID[inst._rootNodeID] = inst;\n  },\n\n  unmountWrapper: function (inst) {\n    delete instancesByReactID[inst._rootNodeID];\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactMount.getNode(this._rootNodeID);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React with non-React.\n      var otherID = ReactMount.getID(otherNode);\n      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;\n      var otherInstance = instancesByReactID[otherID];\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;"]}