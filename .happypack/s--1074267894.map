{"version":3,"sources":["node_modules/react/lib/ReactEventListener.js"],"names":["EventListener","require","ExecutionEnvironment","PooledClass","ReactInstanceHandles","ReactMount","ReactUpdates","assign","getEventTarget","getUnboundedScrollPosition","DOCUMENT_FRAGMENT_NODE_TYPE","findParent","node","nodeID","getID","rootID","getReactRootIDFromNodeID","container","findReactContainerForID","parent","getFirstReactDOM","TopLevelCallbackBookKeeping","topLevelType","nativeEvent","ancestors","prototype","destructor","length","addPoolingTo","twoArgumentPooler","handleTopLevelImpl","bookKeeping","handleTopLevelWithPath","handleTopLevelWithoutPath","topLevelTarget","window","ancestor","push","i","topLevelTargetID","ReactEventListener","_handleTopLevel","path","currentNativeTarget","eventsFired","currentPathElement","nodeType","reactParent","currentPathElementID","newRootID","scrollValueMonitor","cb","scrollPosition","_enabled","WINDOW_HANDLE","canUseDOM","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","trapBubbledEvent","handlerBaseName","handle","element","listen","dispatchEvent","bind","trapCapturedEvent","capture","monitorScrollValue","refresh","callback","getPooled","batchedUpdates","release","module","exports"],"mappings":"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","file":"ReactEventListener.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;"]}