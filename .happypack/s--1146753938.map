{"version":3,"sources":["node_modules/react/lib/traverseAllChildren.js"],"names":["ReactCurrentOwner","require","ReactElement","ReactInstanceHandles","getIteratorFn","invariant","warning","SEPARATOR","SUBSEPARATOR","userProvidedKeyEscaperLookup","userProvidedKeyEscapeRegex","didWarnAboutMaps","userProvidedKeyEscaper","match","getComponentKey","component","index","key","wrapUserProvidedKey","toString","escapeUserProvidedKey","text","replace","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","isValidElement","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","iterator","call","step","entries","ii","next","done","value","process","env","NODE_ENV","undefined","entry","addendum","_isReactElement","current","name","getName","childrenString","String","Object","keys","join","traverseAllChildren","module","exports"],"mappings":"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","file":"traverseAllChildren.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"]}