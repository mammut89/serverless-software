{"version":3,"sources":["node_modules/react/lib/ReactServerRendering.js"],"names":["ReactDefaultBatchingStrategy","require","ReactElement","ReactInstanceHandles","ReactMarkupChecksum","ReactServerBatchingStrategy","ReactServerRenderingTransaction","ReactUpdates","emptyObject","instantiateReactComponent","invariant","renderToString","element","isValidElement","process","env","NODE_ENV","undefined","transaction","injection","injectBatchingStrategy","id","createReactRootID","getPooled","perform","componentInstance","markup","mountComponent","addChecksumToMarkup","release","renderToStaticMarkup","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA,IAAIA,+BAA+BC,QAAQ,gCAAR,CAAnC;AACA,IAAIC,eAAeD,QAAQ,gBAAR,CAAnB;AACA,IAAIE,uBAAuBF,QAAQ,wBAAR,CAA3B;AACA,IAAIG,sBAAsBH,QAAQ,uBAAR,CAA1B;AACA,IAAII,8BAA8BJ,QAAQ,+BAAR,CAAlC;AACA,IAAIK,kCAAkCL,QAAQ,mCAAR,CAAtC;AACA,IAAIM,eAAeN,QAAQ,gBAAR,CAAnB;;AAEA,IAAIO,cAAcP,QAAQ,sBAAR,CAAlB;AACA,IAAIQ,4BAA4BR,QAAQ,6BAAR,CAAhC;AACA,IAAIS,YAAYT,QAAQ,oBAAR,CAAhB;;AAEA;;;;AAIA,SAASU,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,GAACV,aAAaW,cAAb,CAA4BD,OAA5B,CAAD,GAAwCE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,UAAU,KAAV,EAAiB,uDAAjB,CAAxC,GAAoHA,UAAU,KAAV,CAA5J,GAA+KO,SAA/K;;AAEA,MAAIC,WAAJ;AACA,MAAI;AACFX,iBAAaY,SAAb,CAAuBC,sBAAvB,CAA8Cf,2BAA9C;;AAEA,QAAIgB,KAAKlB,qBAAqBmB,iBAArB,EAAT;AACAJ,kBAAcZ,gCAAgCiB,SAAhC,CAA0C,KAA1C,CAAd;;AAEA,WAAOL,YAAYM,OAAZ,CAAoB,YAAY;AACrC,UAAIC,oBAAoBhB,0BAA0BG,OAA1B,EAAmC,IAAnC,CAAxB;AACA,UAAIc,SAASD,kBAAkBE,cAAlB,CAAiCN,EAAjC,EAAqCH,WAArC,EAAkDV,WAAlD,CAAb;AACA,aAAOJ,oBAAoBwB,mBAApB,CAAwCF,MAAxC,CAAP;AACD,KAJM,EAIJ,IAJI,CAAP;AAKD,GAXD,SAWU;AACRpB,oCAAgCuB,OAAhC,CAAwCX,WAAxC;AACA;AACA;AACAX,iBAAaY,SAAb,CAAuBC,sBAAvB,CAA8CpB,4BAA9C;AACD;AACF;;AAED;;;;;AAKA,SAAS8B,oBAAT,CAA8BlB,OAA9B,EAAuC;AACrC,GAACV,aAAaW,cAAb,CAA4BD,OAA5B,CAAD,GAAwCE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,UAAU,KAAV,EAAiB,6DAAjB,CAAxC,GAA0HA,UAAU,KAAV,CAAlK,GAAqLO,SAArL;;AAEA,MAAIC,WAAJ;AACA,MAAI;AACFX,iBAAaY,SAAb,CAAuBC,sBAAvB,CAA8Cf,2BAA9C;;AAEA,QAAIgB,KAAKlB,qBAAqBmB,iBAArB,EAAT;AACAJ,kBAAcZ,gCAAgCiB,SAAhC,CAA0C,IAA1C,CAAd;;AAEA,WAAOL,YAAYM,OAAZ,CAAoB,YAAY;AACrC,UAAIC,oBAAoBhB,0BAA0BG,OAA1B,EAAmC,IAAnC,CAAxB;AACA,aAAOa,kBAAkBE,cAAlB,CAAiCN,EAAjC,EAAqCH,WAArC,EAAkDV,WAAlD,CAAP;AACD,KAHM,EAGJ,IAHI,CAAP;AAID,GAVD,SAUU;AACRF,oCAAgCuB,OAAhC,CAAwCX,WAAxC;AACA;AACA;AACAX,iBAAaY,SAAb,CAAuBC,sBAAvB,CAA8CpB,4BAA9C;AACD;AACF;;AAED+B,OAAOC,OAAP,GAAiB;AACfrB,kBAAgBA,cADD;AAEfmB,wBAAsBA;AAFP,CAAjB","file":"ReactServerRendering.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};"]}