{"version":3,"sources":["node_modules/fbjs/lib/containsNode.js"],"names":["isTextNode","require","containsNode","_x","_x2","_again","_function","outerNode","innerNode","parentNode","contains","compareDocumentPosition","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;;AAEA;;AAEA;;;;;;;AAOA,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAIC,SAAS,IAAb;;AAEAC,aAAW,OAAOD,MAAP,EAAe;AACxB,QAAIE,YAAYJ,EAAhB;AAAA,QACIK,YAAYJ,GADhB;AAEAC,aAAS,KAAT;;AAEA,QAAI,CAACE,SAAD,IAAc,CAACC,SAAnB,EAA8B;AAC5B,aAAO,KAAP;AACD,KAFD,MAEO,IAAID,cAAcC,SAAlB,EAA6B;AAClC,aAAO,IAAP;AACD,KAFM,MAEA,IAAIR,WAAWO,SAAX,CAAJ,EAA2B;AAChC,aAAO,KAAP;AACD,KAFM,MAEA,IAAIP,WAAWQ,SAAX,CAAJ,EAA2B;AAChCL,WAAKI,SAAL;AACAH,YAAMI,UAAUC,UAAhB;AACAJ,eAAS,IAAT;AACA,eAASC,SAAT;AACD,KALM,MAKA,IAAIC,UAAUG,QAAd,EAAwB;AAC7B,aAAOH,UAAUG,QAAV,CAAmBF,SAAnB,CAAP;AACD,KAFM,MAEA,IAAID,UAAUI,uBAAd,EAAuC;AAC5C,aAAO,CAAC,EAAEJ,UAAUI,uBAAV,CAAkCH,SAAlC,IAA+C,EAAjD,CAAR;AACD,KAFM,MAEA;AACL,aAAO,KAAP;AACD;AACF;AACF;;AAEDI,OAAOC,OAAP,GAAiBX,YAAjB","file":"containsNode.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\n'use strict';\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(_x, _x2) {\n  var _again = true;\n\n  _function: while (_again) {\n    var outerNode = _x,\n        innerNode = _x2;\n    _again = false;\n\n    if (!outerNode || !innerNode) {\n      return false;\n    } else if (outerNode === innerNode) {\n      return true;\n    } else if (isTextNode(outerNode)) {\n      return false;\n    } else if (isTextNode(innerNode)) {\n      _x = outerNode;\n      _x2 = innerNode.parentNode;\n      _again = true;\n      continue _function;\n    } else if (outerNode.contains) {\n      return outerNode.contains(innerNode);\n    } else if (outerNode.compareDocumentPosition) {\n      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n    } else {\n      return false;\n    }\n  }\n}\n\nmodule.exports = containsNode;"]}