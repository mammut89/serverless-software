{"version":3,"sources":["node_modules/react/lib/onlyChild.js"],"names":["ReactElement","require","invariant","onlyChild","children","isValidElement","process","env","NODE_ENV","undefined","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,eAAeC,QAAQ,gBAAR,CAAnB;;AAEA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA;;;;;;;;;;;AAWA,SAASE,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,GAACJ,aAAaK,cAAb,CAA4BD,QAA5B,CAAD,GAAyCE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,UAAU,KAAV,EAAiB,6DAAjB,CAAxC,GAA0HA,UAAU,KAAV,CAAnK,GAAsLO,SAAtL;AACA,SAAOL,QAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBR,SAAjB","file":"onlyChild.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;\n  return children;\n}\n\nmodule.exports = onlyChild;"]}