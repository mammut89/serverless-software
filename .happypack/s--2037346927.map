{"version":3,"sources":["node_modules/react/lib/CSSPropertyOperations.js"],"names":["CSSProperty","require","ExecutionEnvironment","ReactPerf","camelizeStyleName","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","warning","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","canUseDOM","tempStyle","document","createElement","style","font","e","documentElement","cssFloat","undefined","process","env","NODE_ENV","badVendoredStyleNamePattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnHyphenatedStyleName","name","hasOwnProperty","warnBadVendoredStyleName","charAt","toUpperCase","slice","warnStyleValueWithSemicolon","value","replace","warnValidStyle","indexOf","test","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","node","expansion","shorthandPropertyExpansions","individualStyleName","measureMethods","module","exports"],"mappings":"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","file":"CSSPropertyOperations.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactPerf = require('./ReactPerf');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon. ' + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function (node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\n  setValueForStyles: 'setValueForStyles'\n});\n\nmodule.exports = CSSPropertyOperations;"]}