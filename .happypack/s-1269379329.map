{"version":3,"sources":["node_modules/react/lib/ChangeEventPlugin.js"],"names":["EventConstants","require","EventPluginHub","EventPropagators","ExecutionEnvironment","ReactUpdates","SyntheticEvent","getEventTarget","isEventSupported","isTextInputElement","keyOf","topLevelTypes","eventTypes","change","phasedRegistrationNames","bubbled","onChange","captured","onChangeCapture","dependencies","topBlur","topChange","topClick","topFocus","topInput","topKeyDown","topKeyUp","topSelectionChange","activeElement","activeElementID","activeElementValue","activeElementValueProp","shouldUseChangeEvent","elem","nodeName","toLowerCase","type","doesChangeEventBubble","canUseDOM","document","documentMode","manualDispatchChangeEvent","nativeEvent","event","getPooled","accumulateTwoPhaseDispatches","batchedUpdates","runEventInBatch","enqueueEvents","processEventQueue","startWatchingForChangeEventIE8","target","targetID","attachEvent","stopWatchingForChangeEventIE8","detachEvent","getTargetIDForChangeEvent","topLevelType","topLevelTarget","topLevelTargetID","handleEventsForChangeEventIE8","isInputEventSupported","newValueProp","get","call","set","val","startWatchingForValueChange","value","Object","getOwnPropertyDescriptor","constructor","prototype","defineProperty","handlePropertyChange","stopWatchingForValueChange","propertyName","srcElement","getTargetIDForInputEvent","handleEventsForInputEventIE","getTargetIDForInputEventIE","shouldUseClickEvent","getTargetIDForClickEvent","ChangeEventPlugin","extractEvents","nativeEventTarget","getTargetIDFunc","handleEventFunc","module","exports"],"mappings":"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","file":"ChangeEventPlugin.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;"]}