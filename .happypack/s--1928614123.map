{"version":3,"sources":["node_modules/react-router/lib/PatternUtils.js"],"names":["exports","__esModule","compilePattern","matchPattern","getParamNames","getParams","formatPattern","_invariant","require","_invariant2","_interopRequireDefault","obj","default","escapeRegExp","string","replace","_compilePattern","pattern","regexpSource","paramNames","tokens","match","lastIndex","matcher","exec","index","push","slice","length","CompiledPatternsCache","Object","create","pathname","charAt","_compilePattern2","RegExp","matchedPath","remainingPathname","substr","paramValues","map","v","decodeURIComponent","params","forEach","paramName","_compilePattern3","parenCount","splatIndex","token","paramValue","i","len","Array","isArray","splat","process","env","NODE_ENV","encodeURI","substring","encodeURIComponent"],"mappings":"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","file":"PatternUtils.js","sourceRoot":"/Users/mo/serverless-software","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.compilePattern = compilePattern;\nexports.matchPattern = matchPattern;\nexports.getParamNames = getParamNames;\nexports.getParams = getParams;\nexports.formatPattern = formatPattern;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction _compilePattern(pattern) {\n  var regexpSource = '';\n  var paramNames = [];\n  var tokens = [];\n\n  var match = void 0,\n      lastIndex = 0,\n      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\\*\\*|\\*|\\(|\\)/g;\n  while (match = matcher.exec(pattern)) {\n    if (match.index !== lastIndex) {\n      tokens.push(pattern.slice(lastIndex, match.index));\n      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));\n    }\n\n    if (match[1]) {\n      regexpSource += '([^/]+)';\n      paramNames.push(match[1]);\n    } else if (match[0] === '**') {\n      regexpSource += '(.*)';\n      paramNames.push('splat');\n    } else if (match[0] === '*') {\n      regexpSource += '(.*?)';\n      paramNames.push('splat');\n    } else if (match[0] === '(') {\n      regexpSource += '(?:';\n    } else if (match[0] === ')') {\n      regexpSource += ')?';\n    }\n\n    tokens.push(match[0]);\n\n    lastIndex = matcher.lastIndex;\n  }\n\n  if (lastIndex !== pattern.length) {\n    tokens.push(pattern.slice(lastIndex, pattern.length));\n    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));\n  }\n\n  return {\n    pattern: pattern,\n    regexpSource: regexpSource,\n    paramNames: paramNames,\n    tokens: tokens\n  };\n}\n\nvar CompiledPatternsCache = Object.create(null);\n\nfunction compilePattern(pattern) {\n  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);\n\n  return CompiledPatternsCache[pattern];\n}\n\n/**\n * Attempts to match a pattern on the given pathname. Patterns may use\n * the following special characters:\n *\n * - :paramName     Matches a URL segment up to the next /, ?, or #. The\n *                  captured string is considered a \"param\"\n * - ()             Wraps a segment of the URL that is optional\n * - *              Consumes (non-greedy) all characters up to the next\n *                  character in the pattern, or to the end of the URL if\n *                  there is none\n * - **             Consumes (greedy) all characters up to the next character\n *                  in the pattern, or to the end of the URL if there is none\n *\n *  The function calls callback(error, matched) when finished.\n * The return value is an object with the following properties:\n *\n * - remainingPathname\n * - paramNames\n * - paramValues\n */\nfunction matchPattern(pattern, pathname) {\n  // Ensure pattern starts with leading slash for consistency with pathname.\n  if (pattern.charAt(0) !== '/') {\n    pattern = '/' + pattern;\n  }\n\n  var _compilePattern2 = compilePattern(pattern);\n\n  var regexpSource = _compilePattern2.regexpSource;\n  var paramNames = _compilePattern2.paramNames;\n  var tokens = _compilePattern2.tokens;\n\n\n  if (pattern.charAt(pattern.length - 1) !== '/') {\n    regexpSource += '/?'; // Allow optional path separator at end.\n  }\n\n  // Special-case patterns like '*' for catch-all routes.\n  if (tokens[tokens.length - 1] === '*') {\n    regexpSource += '$';\n  }\n\n  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));\n  if (match == null) {\n    return null;\n  }\n\n  var matchedPath = match[0];\n  var remainingPathname = pathname.substr(matchedPath.length);\n\n  if (remainingPathname) {\n    // Require that the match ends at a path separator, if we didn't match\n    // the full path, so any remaining pathname is a new path segment.\n    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {\n      return null;\n    }\n\n    // If there is a remaining pathname, treat the path separator as part of\n    // the remaining pathname for properly continuing the match.\n    remainingPathname = '/' + remainingPathname;\n  }\n\n  return {\n    remainingPathname: remainingPathname,\n    paramNames: paramNames,\n    paramValues: match.slice(1).map(function (v) {\n      return v && decodeURIComponent(v);\n    })\n  };\n}\n\nfunction getParamNames(pattern) {\n  return compilePattern(pattern).paramNames;\n}\n\nfunction getParams(pattern, pathname) {\n  var match = matchPattern(pattern, pathname);\n  if (!match) {\n    return null;\n  }\n\n  var paramNames = match.paramNames;\n  var paramValues = match.paramValues;\n\n  var params = {};\n\n  paramNames.forEach(function (paramName, index) {\n    params[paramName] = paramValues[index];\n  });\n\n  return params;\n}\n\n/**\n * Returns a version of the given pattern with params interpolated. Throws\n * if there is a dynamic segment of the pattern for which there is no param.\n */\nfunction formatPattern(pattern, params) {\n  params = params || {};\n\n  var _compilePattern3 = compilePattern(pattern);\n\n  var tokens = _compilePattern3.tokens;\n\n  var parenCount = 0,\n      pathname = '',\n      splatIndex = 0;\n\n  var token = void 0,\n      paramName = void 0,\n      paramValue = void 0;\n  for (var i = 0, len = tokens.length; i < len; ++i) {\n    token = tokens[i];\n\n    if (token === '*' || token === '**') {\n      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;\n\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path \"%s\"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;\n\n      if (paramValue != null) pathname += encodeURI(paramValue);\n    } else if (token === '(') {\n      parenCount += 1;\n    } else if (token === ')') {\n      parenCount -= 1;\n    } else if (token.charAt(0) === ':') {\n      paramName = token.substring(1);\n      paramValue = params[paramName];\n\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing \"%s\" parameter for path \"%s\"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;\n\n      if (paramValue != null) pathname += encodeURIComponent(paramValue);\n    } else {\n      pathname += token;\n    }\n  }\n\n  return pathname.replace(/\\/+/g, '/');\n}"]}